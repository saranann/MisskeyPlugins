{
    "type": "plugin",
    "data": "/// @ 0.16.0\n### {\n    name: \"ReplaceWordPlugin\",\n    id: \"ca4b5cf2-b6f1-4ca7-af32-f088824690c3\",\n    version: \"1.0.0\",\n    author: \"@yamada_20020924@voskey.icalo.net\",\n    description: \"ワードを投稿時に置換するプラグイン\",\n    config: {\n        wordPairList: {\n            type: \"string\",\n            label: \"word pair list\",\n            description: \"JSON形式でワードを置換するペアを書く。\",\n            default: \"[{\\\"pattern\\\":\\\"Twitter\\\",\\\"replacement\\\":\\\"X\\\"}]\"\n        }\n    }\n}\n\nlet wordPairList = Json:parse(Plugin:config.wordPairList)\nlet isOk = Core:type(wordPairList)==\"arr\" && wordPairList.reduce(@(accumulator,wordPair){accumulator&&Core:type(wordPair)==\"obj\"&&Core:type(wordPair.pattern)==\"str\"&&Core:type(wordPair.replacement)==\"str\"},true)\n\n@removeNullValues(obj){\n    let result = {}\n    let keys = Obj:keys(obj)\n    keys.map(@(key){if (obj[key]!=null) result[key] = if (Core:type(obj[key])==\"obj\") removeNullValues(obj[key]) else obj[key]})\n    result\n}\n\n@replaceWords(text){\n    wordPairList.reduce(@(accumulator,wordPair){accumulator.replace(wordPair.pattern,wordPair.replacement)},text)\n}\n\n@tryReplaceWords(obj,key){\n    if (obj[key]!=null) obj[key] = replaceWords(obj[key])\n}\n\n@callback(note){\n    tryReplaceWords(note, \"cw\")\n    tryReplaceWords(note, \"text\")\n    return removeNullValues(note)\n}\n\nif (isOk) {\n    Plugin:register_note_post_interruptor(callback)\n}\nelse {\n    Mk:dialog(\"word pair list error\", \"word pair listの指定が不正です。\", \"error\")\n}"
}
