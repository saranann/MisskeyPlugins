{
    "type": "plugin",
    "data": "/// @ 0.16.0\n### {\n    name: \"flexible user mute\",\n    id: \"b3b5c48d-d0a0-496c-86ff-f40b135359b9\",\n    version: \"1.0.0\",\n    author: \"@yamada_20020924@voskey.icalo.net\",\n    description: \"User mute plugin with flexible time settings\",\n    permissions: [\"write:mutes\"],\n    config: {\n        customizedMutePeriodList: {\n            type: \"string\",\n            label: \"\",\n            description: \"Describe the mute period in JSON format\",\n            default: \"[{\"title\":\"30 days\",\"period\":2592000000},{\"title\":\"90 days\",\"period\":7776000000}]\"\n        }\n    }\n}\n\nlet mutePeriodList = Json:parse(Plugin:config.customizedMutePeriodList)\n\n//JSON check\nvar isOk = true\nif (Core:type(mutePeriodList)==\"error\") {\n    isOk = false\n    Mk:dialog(\"JSON PARSE ERROR\", \"Malformed JSON\", \"error\")\n}\n\nif (isOk) {\n    each (let mutePeriodPair, mutePeriodList) {\n        if (Core:type(mutePeriodPair.title)==\"str\"&&Core:type(mutePeriodPair.period)==\"num\") {\n            Plugin:register_user_action(mutePeriodPair.title, @(user){\n                let nowUnixtime = Date:now()\n                let result = Mk:api(\"mute/create\", {userId: user.id, expiresAt: nowUnixtime+mutePeriodPair.period})\n                if (Core:type(result)==\"error\") {\n                    Mk:dialog(result.name, Json:stringify(result.info), \"error\")\n                }\n                else {\n                    Mk:dialog(\"Succeeded\", \"This user has been muted\", \"info\")\n                }\n            })\n        }\n        else {\n            Mk:dialog(\"OBJECT VALUE ERROR\", \"\", \"error\")\n        }\n    }\n}"
}
